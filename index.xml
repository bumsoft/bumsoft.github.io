<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BumSoft</title>
    <link>https://bumsoft.github.io/</link>
    <description>Recent content on BumSoft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Nov 2023 14:48:08 +0900</lastBuildDate><atom:link href="https://bumsoft.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>다익스트라</title>
      <link>https://bumsoft.github.io/algorithm/dijkstra/</link>
      <pubDate>Mon, 20 Nov 2023 16:05:08 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/algorithm/dijkstra/</guid>
      <description>다익스트라 알고리즘은 하나의 정점 에서 다른 모든 정점으로 가는 최단 경로 탐색 알고리즘이다.
알고리즘에 대한 자세한 설명은 건너뛰고 어떻게 구현위주로 작성하겠다.
벡터 배열 우선순위 큐 C++로 다익스트라 구현하기 위해 위 3가지가 필요하다.
우선 정점의 개수가 N개라고 가정을 하자.
벡터는 다음과 같이 선언할 것이다. (1번 정점부터 N번 정점까지 저장해야하기에 N+1) vector&amp;lt;pair&amp;lt;int, int&amp;gt;&amp;gt; vertex[N+1]; vertex[i] : i번 정점
vertex[i]의 원소 :pair( i에서 갈 수 있는 다른 정점 , 그 정점까지의 가중치 )</description>
    </item>
    
    <item>
      <title>C언어 포인터/배열</title>
      <link>https://bumsoft.github.io/writing/pointer/</link>
      <pubDate>Wed, 08 Nov 2023 19:47:47 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/writing/pointer/</guid>
      <description>헷갈리기 쉬운 부분이니 확실하게 정리하고 넘어가는게 좋을 것 같다.
배열과 포인터의 관계를 이해하기위해 알아야하는 것이 있다.
arr[i] == *(arr+i) 이게 같은 표현이라는 것. 이걸 이용해 2차원 배열까지 포인터로 표현할 수가 있다.
1차원배열 배열은 정적배열과 동적배열로 구분된다.
정적배열 우리가 흔히 떠올리는 int arr[]; 는 정적배열이다. 선언 시 배열의 크기를 지정해주어야하며, 크기의 자리에 변수가 올 수 없다.
우선 간단하게 1차원 정적배열을 만들어보자.
int arr1[3] = { 1,2,3 }; int* ptr1 = arr1; cout &amp;lt;&amp;lt; ptr1[1] &amp;lt;&amp;lt; &amp;#39;,&amp;#39; &amp;lt;&amp;lt; *(ptr1 + 1) &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; ptr1[3] &amp;lt;&amp;lt; endl; //쓰레기값!</description>
    </item>
    
    <item>
      <title>자바로 게임만들기</title>
      <link>https://bumsoft.github.io/project/project_game/</link>
      <pubDate>Tue, 07 Nov 2023 20:51:50 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/project/project_game/</guid>
      <description>(사진 클릭 시 유튜브로 연결!)
과제 연습삼아 틀만 만들어보려 시작했는데 생각보다 재미있어서 금방 만들었다.
총알과 공은 벡터를 이용해 추적하고 삭제하는 방식인데 아직 OOP로 프로그램을 만들어본 경험이 거의 없어 코드가 약간 스파게티코드라&amp;hellip; 조만간 제대로된 MVC구조로 다시 설계할 예정이다.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 백준 7677 Fibonacci</title>
      <link>https://bumsoft.github.io/algorithm/7677/</link>
      <pubDate>Sun, 05 Nov 2023 04:06:08 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/algorithm/7677/</guid>
      <description>문제 풀러가기 피보나치수를 구하는 문제였다.
다만 N의 최대가 1,000,000,000이라 예전에 dp로 풀었을 땐 시간초과가 났다.
이산수학에서 행렬을 배우고 다시 보니 풀 수 있을 것 같아서 다시 풀어봤다.
풀이 행렬의 거듭제곱을 이용해야한다. 다만, N번 곱한다면 시간복잡도가 O(N) 이기에 이문제는 풀 수 없다.
분할정복을 이용한 거듭제곱 알고리즘을 사용해 O(logN)으로 풀 수 있다. 분할정복을 이용한 거듭제곱
N이 짝수 A^N = A^(N/2) * A^(N/2)
N이 홀수 A^N = A^((N-1)/2) * A^((N-1)/2) * A
2*2라 그냥 2차원배열로 만들까 생각도 했지만 이번기회에 벡터사용에 익숙해지면 좋을 것 같아 벡터를 사용했다.</description>
    </item>
    
    <item>
      <title>Markdown 문법</title>
      <link>https://bumsoft.github.io/writing/markdown/</link>
      <pubDate>Sat, 04 Nov 2023 19:00:00 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/writing/markdown/</guid>
      <description>마크다운 작성법에 대해 정리한 글입니다.
(시간 날 때마다 계속 추가 예정)
[제목] #h1 ##h2 ###h3 ####h4 #####h5 ######h6 [개행] 개행을 하려면 문장의 끝에 스페이스 두개 해줘야함
개행을 하려면 문장의 끝에 스페이스 두개
해줘야함
[이미지삽입] ![screensh](이미지경로.png) 괄호안에 이미지의 주소를 넣어도 돼서 보통 비공개블로그 같은 곳에 이미지만 올려두고 그 주소를 사용하는경우도 많음
다만 위처럼 마크다운 형식으로 이미지 삽입시 크기 조절이 안됨
필요하다면 html의 img태그를 이용하자
[인용구] &amp;gt;인용구
인용구
[코드블록] ```
int main()</description>
    </item>
    
    <item>
      <title>.sh로 배포 쉽게하기</title>
      <link>https://bumsoft.github.io/writing/deploy/</link>
      <pubDate>Tue, 31 Oct 2023 23:13:41 +0900</pubDate>
      
      <guid>https://bumsoft.github.io/writing/deploy/</guid>
      <description>sh파일로 쉽게 배포하기 c:hugo/hugo_blog/deploy.sh 만들어서 코드로 다음 작성. ======================deploy.sh========================
#!/bin/bash
echo -e &amp;ldquo;\033[0;32mDeploying updates to GitHub&amp;hellip;\033[0m&amp;rdquo;
# Build the project.
# hugo -t &amp;lt;여러분의 테마&amp;gt;
hugo -t 테마이름
# Go To Public folder, sub module commit
cd public
# Add changes to git.
git add .
# Commit changes.
msg=&amp;ldquo;rebuilding site date&amp;rdquo;
if [ $# -eq 1 ]
then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;ldquo;$msg&amp;rdquo;
# Push source and build repos.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://bumsoft.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bumsoft.github.io/about/</guid>
      <description>안녕하세요! 신진범입니다.
저의 흔적을 기록하는 곳입니다.
프로젝트 알고리즘 CS공부 웹 &amp;hellip; </description>
    </item>
    
  </channel>
</rss>
